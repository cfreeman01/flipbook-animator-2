{"version":3,"sources":["context.js","components/IconButton.js","icons/pencil.png","icons/pen.png","icons/eraser.png","icons/dropper.png","icons/undo.png","icons/redo.png","components/Toolbar.js","icons/black.png","icons/white.png","icons/red.png","icons/orange.png","icons/yellow.png","icons/green.png","icons/pink.png","icons/blue.png","components/ColorSelector.js","components/Sidebar.js","components/CanvasForm.js","components/FlipbookCanvas.js","components/Flipbook.js","index.js"],"names":["FlipbookContext","React","createContext","IconButton","btnTitle","imgSrc","onClick_p","selected","useState","btnClass","setClass","iconClass","alt","title","src","className","onClick","onMouseOver","onMouseOut","onMouseDown","onMouseUp","Toolbar","useContext","globalState","setGlobalState","setSelectedTool","toolName","newState","Object","assign","selectedTool","id","pencilIcon","penIcon","eraserIcon","dropperIcon","undoIcon","console","log","redoIcon","ColorSelector","setSelectedColor","colorValue","selectedColor","blackIcon","whiteIcon","redIcon","orangeIcon","yellowIcon","greenIcon","pinkIcon","blueIcon","type","onChange","e","target","value","Sidebar","CanvasForm","createCanvas_p","inputWidth","inputHeight","defaultValue","FlipbookCanvas","width","height","bcRef","useRef","useEffect","bc","current","window","devicePixelRatio","style","ref","Flipbook","canvasOpen","canvasWidth","canvasHeight","middleComponent","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4deddc44.chunk.js","sourcesContent":["import React from 'react'\n\nconst FlipbookContext = React.createContext();\n\nexport default FlipbookContext;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './IconButton.css'\n\nconst IconButton = ({btnTitle, imgSrc, onClick_p, selected}) => {\n\n    const [btnClass, setClass] = React.useState('iconUnselected');\n\n    const iconClass = selected ? 'iconSelected' : btnClass;\n\n    return(\n        <img alt={btnTitle}\n        title={btnTitle} \n        src={imgSrc} \n        className={iconClass}\n        onClick={onClick_p} \n        onMouseOver={() => setClass('iconHovered')}\n        onMouseOut={() => setClass('iconUnselected')} \n        onMouseDown={() => setClass('iconSelected')} \n        onMouseUp={() => setClass('iconHovered')}/>\n    );\n}\n\nexport default IconButton;","export default __webpack_public_path__ + \"static/media/pencil.588014e8.png\";","export default __webpack_public_path__ + \"static/media/pen.373e6d9c.png\";","export default __webpack_public_path__ + \"static/media/eraser.ce11724e.png\";","export default __webpack_public_path__ + \"static/media/dropper.f62bf4e2.png\";","export default __webpack_public_path__ + \"static/media/undo.eb7626ba.png\";","export default __webpack_public_path__ + \"static/media/redo.b5eb995b.png\";","import React from 'react'\nimport FlipbookContext from '../context'\nimport './Toolbar.css'\nimport IconButton from './IconButton'\nimport pencilIcon from '../icons/pencil.png'\nimport penIcon from '../icons/pen.png'\nimport eraserIcon from '../icons/eraser.png'\nimport dropperIcon from '../icons/dropper.png'\nimport undoIcon from '../icons/undo.png'\nimport redoIcon from '../icons/redo.png'\n\n//toolbar on the left side of the page\nconst Toolbar = () => {\n\n    const {globalState, setGlobalState} = React.useContext(FlipbookContext);\n\n    const undo = () => {\n        console.log('Undo');\n    }\n\n    const redo = () => {\n        console.log('Redo');\n    }\n\n    const setSelectedTool = (toolName) => {\n        let newState = Object.assign({}, globalState);\n        newState.selectedTool = toolName;\n        setGlobalState(newState);\n    }\n\n    return (\n        <div id=\"toolbarContainer\">\n            <IconButton btnTitle='Pencil' imgSrc={pencilIcon} onClick_p={() => setSelectedTool('Pencil')}\n                selected={globalState.selectedTool === 'Pencil'} />\n\n            <IconButton btnTitle='Pen' imgSrc={penIcon} onClick_p={() => setSelectedTool('Pen')}\n                selected={globalState.selectedTool === 'Pen'} />\n\n            <IconButton btnTitle='Eraser' imgSrc={eraserIcon} onClick_p={() => setSelectedTool('Eraser')}\n                selected={globalState.selectedTool === 'Eraser'} />\n\n            <IconButton btnTitle='Dropper' imgSrc={dropperIcon} onClick_p={() => setSelectedTool('Dropper')}\n                selected={globalState.selectedTool === 'Dropper'} />\n\n            <hr />\n\n            <IconButton btnTitle='Undo' imgSrc={undoIcon} onClick_p={() => undo()}\n                selected={false} />\n\n            <IconButton btnTitle='Redo' imgSrc={redoIcon} onClick_p={() => redo()}\n                selected={false} />\n\n        </div>\n    );\n}\n\nexport default Toolbar;","export default __webpack_public_path__ + \"static/media/black.1fd5be43.png\";","export default __webpack_public_path__ + \"static/media/white.f637800e.png\";","export default __webpack_public_path__ + \"static/media/red.b2e9f841.png\";","export default __webpack_public_path__ + \"static/media/orange.7ab39e4f.png\";","export default __webpack_public_path__ + \"static/media/yellow.259f7955.png\";","export default __webpack_public_path__ + \"static/media/green.71014684.png\";","export default __webpack_public_path__ + \"static/media/pink.2a087a8e.png\";","export default __webpack_public_path__ + \"static/media/blue.d0223170.png\";","import React from 'react'\nimport FlipbookContext from '../context'\nimport './ColorSelector.css'\nimport IconButton from './IconButton'\nimport blackIcon from '../icons/black.png'\nimport whiteIcon from '../icons/white.png'\nimport redIcon from '../icons/red.png'\nimport orangeIcon from '../icons/orange.png'\nimport yellowIcon from '../icons/yellow.png'\nimport greenIcon from '../icons/green.png'\nimport pinkIcon from '../icons/pink.png'\nimport blueIcon from '../icons/blue.png'\n\nconst ColorSelector = () => {\n\n    const { globalState, setGlobalState } = React.useContext(FlipbookContext);\n\n    const setSelectedColor = (colorValue) => {\n        let newState = Object.assign({}, globalState);\n        newState.selectedColor = colorValue;\n        setGlobalState(newState);\n    }\n\n    return (\n        <div id='colorSelectorContainer'>\n            <IconButton btnTitle='Black' imgSrc={blackIcon} onClick_p={() => { setSelectedColor('#000000') }}\n                selected={globalState.selectedColor === '#000000'} />\n\n            <IconButton btnTitle='White' imgSrc={whiteIcon} onClick_p={() => { setSelectedColor('#ffffff') }}\n                selected={globalState.selectedColor === '#ffffff'} />\n\n            <IconButton btnTitle='Red' imgSrc={redIcon} onClick_p={() => { setSelectedColor('#f85e43') }}\n                selected={globalState.selectedColor === '#f85e43'} />\n\n            <IconButton btnTitle='Orange' imgSrc={orangeIcon} onClick_p={() => { setSelectedColor('#f39127') }}\n                selected={globalState.selectedColor === '#f39127'} />\n\n            <IconButton btnTitle='Yellow' imgSrc={yellowIcon} onClick_p={() => { setSelectedColor('#f3c327') }}\n                selected={globalState.selectedColor === '#f3c327'} />\n\n            <IconButton btnTitle='Green' imgSrc={greenIcon} onClick_p={() => { setSelectedColor('#34a234') }}\n                selected={globalState.selectedColor === '#34a234'} />\n\n            <IconButton btnTitle='Pink' imgSrc={pinkIcon} onClick_p={() => { setSelectedColor('#f74579') }}\n                selected={globalState.selectedColor === '#f74579'} />\n\n            <IconButton btnTitle='Blue' imgSrc={blueIcon} onClick_p={() => { setSelectedColor('#4376f8') }}\n                selected={globalState.selectedColor === '#4376f8'} />\n\n            <input type=\"color\" id=\"colorPicker\" onChange={(e) => { setSelectedColor(e.target.value) }} />\n        </div>\n    );\n}\n\nexport default ColorSelector;","import React from 'react'\nimport ColorSelector from './ColorSelector'\nimport './Sidebar.css'\n\nconst Sidebar = () => {\n    return (\n        <div id='sidebarContainer'>\n            <h1>Color</h1>\n            <ColorSelector />\n            <h1>Size</h1>\n            <h1>Layers</h1>\n        </div>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './CanvasForm.css'\n\nconst CanvasForm = ({ createCanvas_p }) => {\n\n    let inputWidth = 500;\n    let inputHeight = 500;\n\n    return (\n        <div id='canvasForm'>\n            <h1>Canvas Dimensions</h1>\n            <p>Width:  </p>\n            <input type='number' defaultValue={500} onChange={(e) => inputWidth = e.target.value} />\n            <p> px</p>\n            <br />\n            <p>Height:  </p>\n            <input type='number' defaultValue={500} onChange={(e) => inputHeight = e.target.value} />\n            <p> px</p>\n            <br />\n            <button onClick={() => createCanvas_p(inputWidth, inputHeight)}>Create Canvas</button>\n        </div>\n    );\n}\n\nexport default CanvasForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './FlipbookCanvas.css'\n\nconst FlipbookCanvas = ({ width, height }) => {\n\n    const bcRef = React.useRef();\n\n    React.useEffect(() => {\n        const bc = bcRef.current;\n        bc.width = width * window.devicePixelRatio;\n        bc.height = height * window.devicePixelRatio;\n        bc.style.width = width + \"px\";\n        bc.style.height = height + \"px\";\n    }, [])\n\n    return (\n        <div id='canvasContainer'>\n            <canvas id=\"bottomCanvas\" ref={bcRef} />\n        </div>\n    );\n\n}\n\nexport default FlipbookCanvas;","import React from 'react'\nimport FlipbookContext from '../context'\nimport Toolbar from './Toolbar'\nimport Sidebar from './Sidebar'\nimport CanvasForm from './CanvasForm'\nimport FlipbookCanvas from './FlipbookCanvas'\n\nconst Flipbook = () => {\n\n    const [globalState, setGlobalState] = React.useState({\n        canvasOpen: false,\n        canvasWidth: 0,\n        canvasHeight: 0,\n        selectedTool: 'Pencil',\n        selectedColor: '#000000'\n    });\n\n    const createCanvas = (width, height) => {\n        let newState = Object.assign({}, globalState);\n        newState.canvasOpen = true;\n        newState.canvasWidth = width;\n        newState.canvasHeight = height;\n        setGlobalState(newState);\n    }\n\n    let middleComponent = globalState.canvasOpen ?\n        <FlipbookCanvas width={globalState.canvasWidth} height={globalState.canvasHeight} />\n        : <CanvasForm createCanvas_p={createCanvas} />;\n\n    return (\n        <FlipbookContext.Provider value={{globalState, setGlobalState}}>\n            <Toolbar />\n            {middleComponent}\n            <Sidebar />\n        </FlipbookContext.Provider>\n    );\n}\n\nexport default Flipbook","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Flipbook from './components/Flipbook'\n\nconst App = () => <Flipbook />\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}