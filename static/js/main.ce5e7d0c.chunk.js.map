{"version":3,"sources":["components/IconButton.js","icons/pencil.png","icons/pen.png","icons/eraser.png","icons/dropper.png","icons/undo.png","icons/redo.png","components/Toolbar.js","components/Sidebar.js","components/CanvasForm.js","components/FlipbookCanvas.js","components/Flipbook.js","index.js"],"names":["IconButton","btnTitle","imgSrc","onClick_p","selected","React","useState","btnClass","setClass","iconClass","alt","title","src","className","onClick","onMouseOver","onMouseOut","onMouseDown","onMouseUp","Toolbar","selectedTool","setSelectedTool","id","pencilIcon","penIcon","eraserIcon","dropperIcon","undoIcon","console","log","redoIcon","Sidebar","CanvasForm","createCanvas_p","inputWidth","inputHeight","type","defaultValue","onChange","e","target","value","FlipbookCanvas","width","height","bcRef","useRef","useEffect","bc","current","window","devicePixelRatio","style","ref","Flipbook","canvasOpen","canvasWidth","canvasHeight","globalState","setGlobalState","middleComponent","newState","Object","assign","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce5e7d0c.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './IconButton.css'\n\nconst IconButton = ({btnTitle, imgSrc, onClick_p, selected}) => {\n\n    const [btnClass, setClass] = React.useState('iconUnselected');\n\n    const iconClass = selected ? 'iconSelected' : btnClass;\n\n    return(\n        <img alt={btnTitle}\n        title={btnTitle} \n        src={imgSrc} \n        className={iconClass}\n        onClick={onClick_p} \n        onMouseOver={() => setClass('iconHovered')}\n        onMouseOut={() => setClass('iconUnselected')} \n        onMouseDown={() => setClass('iconSelected')} \n        onMouseUp={() => setClass('iconHovered')}/>\n    );\n}\n\nexport default IconButton;","export default __webpack_public_path__ + \"static/media/pencil.588014e8.png\";","export default __webpack_public_path__ + \"static/media/pen.373e6d9c.png\";","export default __webpack_public_path__ + \"static/media/eraser.ce11724e.png\";","export default __webpack_public_path__ + \"static/media/dropper.f62bf4e2.png\";","export default __webpack_public_path__ + \"static/media/undo.eb7626ba.png\";","export default __webpack_public_path__ + \"static/media/redo.b5eb995b.png\";","import React from 'react'\nimport './Toolbar.css'\nimport IconButton from './IconButton'\nimport pencilIcon from '../icons/pencil.png'\nimport penIcon from '../icons/pen.png'\nimport eraserIcon from '../icons/eraser.png'\nimport dropperIcon from '../icons/dropper.png'\nimport undoIcon from '../icons/undo.png'\nimport redoIcon from '../icons/redo.png'\n\n//toolbar on the left side of the page\nconst Toolbar = () => {\n\n    const [selectedTool, setSelectedTool] = React.useState('Pencil');\n\n    const undo = () => {\n        console.log('Undo');\n    }\n\n    const redo = () => {\n        console.log('Redo');\n    }\n\n    return (\n        <div id=\"toolbarContainer\">\n            <IconButton btnTitle='Pencil' imgSrc={pencilIcon} onClick_p={() => setSelectedTool('Pencil')}\n                selected={selectedTool === 'Pencil'} />\n\n            <IconButton btnTitle='Pen' imgSrc={penIcon} onClick_p={() => setSelectedTool('Pen')}\n                selected={selectedTool === 'Pen'} />\n\n            <IconButton btnTitle='Eraser' imgSrc={eraserIcon} onClick_p={() => setSelectedTool('Eraser')}\n                selected={selectedTool === 'Eraser'} />\n\n            <IconButton btnTitle='Dropper' imgSrc={dropperIcon} onClick_p={() => setSelectedTool('Dropper')}\n                selected={selectedTool === 'Dropper'} />\n\n            <hr />\n\n            <IconButton btnTitle='Undo' imgSrc={undoIcon} onClick_p={() => undo()}\n                selected={false} />\n\n            <IconButton btnTitle='Pencil' imgSrc={redoIcon} onClick_p={() => redo()}\n                selected={false} />\n\n        </div>\n    );\n}\n\nexport default Toolbar;","import React from 'react'\nimport './Sidebar.css'\n\nconst Sidebar = () => {\n    return (\n        <div id='sidebarContainer'>\n            <h1>Color</h1>\n            <h1>Size</h1>\n            <h1>Layers</h1>\n        </div>\n    );\n}\n\nexport default Sidebar;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './CanvasForm.css'\n\nconst CanvasForm = ({ createCanvas_p }) => {\n\n    let inputWidth = 500;\n    let inputHeight = 500;\n\n    return (\n        <div id='canvasForm'>\n            <h1>Canvas Dimensions</h1>\n            <p>Width:  </p>\n            <input type='number' defaultValue={500} onChange={(e) => inputWidth = e.target.value} />\n            <p> px</p>\n            <br />\n            <p>Height:  </p>\n            <input type='number' defaultValue={500} onChange={(e) => inputHeight = e.target.value} />\n            <p> px</p>\n            <br />\n            <button onClick={() => createCanvas_p(inputWidth, inputHeight)}>Create Canvas</button>\n        </div>\n    );\n}\n\nexport default CanvasForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport './FlipbookCanvas.css'\n\nconst FlipbookCanvas = ({ width, height }) => {\n\n    const bcRef = React.useRef();\n\n    React.useEffect(() => {\n        const bc = bcRef.current;\n        bc.width = width * window.devicePixelRatio;\n        bc.height = height * window.devicePixelRatio;\n        bc.style.width = width + \"px\";\n        bc.style.height = height + \"px\";\n    }, [])\n\n    return (\n        <div id='canvasContainer'>\n            <canvas id=\"bottomCanvas\" ref={bcRef} />\n        </div>\n    );\n\n}\n\nexport default FlipbookCanvas;","import React from 'react'\nimport Toolbar from './Toolbar'\nimport Sidebar from './Sidebar'\nimport CanvasForm from './CanvasForm'\nimport FlipbookCanvas from './FlipbookCanvas'\n\nconst Flipbook = () => {\n\n    const [globalState, setGlobalState] = React.useState({\n        canvasOpen: false,\n        canvasWidth: 0,\n        canvasHeight: 0\n    });\n\n    const getGlobalState = () => Object.assign({}, globalState);\n\n    const createCanvas = (width, height) => {\n        let newState = getGlobalState();\n        newState.canvasOpen = true;\n        newState.canvasWidth = width;\n        newState.canvasHeight = height;\n        setGlobalState(newState);\n    }\n\n    let middleComponent = globalState.canvasOpen ?\n        <FlipbookCanvas width={globalState.canvasWidth} height={globalState.canvasHeight} />\n        : <CanvasForm createCanvas_p={createCanvas} />;\n\n    return (\n        <div id=\"top-container\">\n            <Toolbar />\n            {middleComponent}\n            <Sidebar />\n        </div>\n    );\n}\n\nexport default Flipbook","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Flipbook from './components/Flipbook'\n\nconst App = () => <Flipbook />\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}